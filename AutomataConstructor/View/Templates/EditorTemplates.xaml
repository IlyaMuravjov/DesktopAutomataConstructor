<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://schemas.panthernet.ru/graphx/"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,1" StartPoint="0.5,0" po:Freeze="true">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFA4ADBB" Offset="0.521"/>
        <GradientStop Color="#FFD7E0EA" Offset="0.194"/>
        <GradientStop Color="#FFBAC1CF" Offset="0.811"/>
        <GradientStop Color="#FFBCC5D5" Offset="0.507"/>
        <GradientStop Color="#FFE3E4E6" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0.5,0" StartPoint="0.5,1" po:Freeze="true">
        <GradientStop Color="#FF8B8B8B"/>
        <GradientStop Color="#FFADADAD" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="EdgeBrush" EndPoint="0.5,0" StartPoint="0.5,1" po:Freeze="true">
        <GradientStop Color="#FF000000"/>
        <GradientStop Color="#FF95EAE2" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="EdgeArrowBrush" Color="Black" po:Freeze="true" />

    <!-- VERTEX CONTROL -->
    <Style TargetType="{x:Type controls:VertexControl}">
        <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VertexControl}">
                    <Grid>
                        <Border x:Name="BackgroundNorm" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="3" MinWidth="120">
                                <Label Content="Name:"/>
                                <TextBox Text="{Binding Name, Mode=TwoWay}" VerticalAlignment="Center" TextAlignment="Center"
                                         HorizontalAlignment="Center" FontWeight="Bold" Foreground="Black" Background="Transparent"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="3" MinWidth="120">
                                <Label Content="Is final:"/>
                                <CheckBox IsChecked="{Binding IsFinal, Mode=TwoWay}" VerticalAlignment="Center"
                                         HorizontalAlignment="Center" FontWeight="Bold" Foreground="Black" Background="Transparent"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="3" MinWidth="120">
                                <Label Content="Is initital:"/>
                                <CheckBox IsChecked="{Binding IsInitial, Mode=TwoWay}" VerticalAlignment="Center"
                                         HorizontalAlignment="Center" FontWeight="Bold" Foreground="Black" Background="Transparent"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- VERTEX DRAGGING CONTROL -->
        <Setter Property="controls:DragBehaviour.IsDragEnabled" Value="False" />
        <Setter Property="controls:DragBehaviour.UpdateEdgesOnMove" Value="True" />

        <Style.Triggers>
            <Trigger Property="controls:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="BorderBrush" Value="Gold"/>
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsInitial}" Value="True">
                <Setter Property="BorderBrush" Value="Green"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFinal}" Value="True">
                <Setter Property="BorderBrush" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <!-- EDGE CONTROL -->
    <Style TargetType="{x:Type controls:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:EdgeControl}">
                    <Grid>
                        <!--Path x:Name="PART_SelfLoopedEdge" Data="F1 M 18,42.5L 18,49L 27,57L 36,48.5L 36,42.5L 30,47.7903L 
                              30,35.5C 30,29.701 34.701,25 40.5,25C 46.299,25 51,29.701 51,35.5C 51,41.1314 46.5668,45.7273
                              41,45.9883L 41,51.9926C 49.8814,51.7283 57,44.4454 57,35.5C 57,26.3873 49.6127,19 40.5,19C
                              31.3873,19 24,26.3873 24,35.5L 24,47.875L 18,42.5 Z "/-->
                        <Path Stroke="{StaticResource EdgeBrush}"
                            StrokeThickness="2" MinWidth="1" MinHeight="1"
                            ToolTip="{TemplateBinding ToolTip}" 
                            x:Name="PART_edgePath"/>
                        <controls:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForTarget" >
                            <Path Data="M0,0.5 L1,1 1,0" Fill="Black" Stretch="Uniform" Width="15" Height="15"/>
                        </controls:DefaultEdgePointer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="Silver" />
        <Setter Property="Opacity" Value="1" />

        <Setter Property="controls:HighlightBehaviour.IsHighlightEnabled" Value="False"/>

        <Style.Triggers>
            <Trigger Property="controls:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Foreground" Value="Gold"/>
                <Setter Property="StrokeThickness" Value="5"/>
            </Trigger>
            <Trigger Property="controls:HighlightBehaviour.Highlighted" Value="False">
                <Setter Property="Foreground" Value="Silver"/>
                <Setter Property="StrokeThickness" Value="2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="controls:AttachableEdgeLabelControl">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>

        <!-- Custom label template body -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AttachableEdgeLabelControl}">
                    <Border Background="White" BorderThickness="3" BorderBrush="Black">
                        <StackPanel Orientation="Horizontal" MinWidth="60">
                            <Label Content="Transition tokens:"/>
                            <TextBox Text="{Binding AttachNode.Edge.TransitionTokensString, Mode=TwoWay}" VerticalAlignment="Center" TextAlignment="Center"
                                         HorizontalAlignment="Center" FontWeight="Bold" Foreground="Black" Background="Transparent"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>